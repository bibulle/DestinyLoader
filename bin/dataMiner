#!/usr/bin/env node

/**
 * Module dependencies.
 */

var debug = require('debug')('SeedMeHome2:server');
var async = require('async');
var CronJob = require('cron').CronJob;
var fs = require('fs');

var logger = require('../lib/logger');
var destiny = require('../lib/destiny');
var destinyDb = require('../lib/destinyDb');
var grimoireGoogle = require('../lib/grimoireGoogle');
var config = require('../lib/config');

var CRON_TAB_MINE_DESTINY = config.crontab;
var CRON_TAB_MINE_GRIMOIRE = config.crontabGrimoire;
logger.info("CronTab          : '" + CRON_TAB_MINE_DESTINY + "'");
//logger.info("CronTab grimoire : '" + CRON_TAB_MINE_GRIMOIRE + "'");

//========================================================================

var mineDestiny;
mineDestiny = function () {
    async.waterfall(
        [
            function (callback) {
                destiny.getClan(config.clanId, function(err, data) {
                    //logger.info("retour du clan");
                    //logger.info(JSON.stringify(err, null, 2));
                    //logger.info(JSON.stringify(data, null, 2));
                    if (err) {
                        return callback(err);
                    }
                    var accounts = data;
                    //logger.info(JSON.stringify(__dirname+'/../data/accountsLight1.js', null, 2));
                    fs.writeFileSync(__dirname+'/../data/clanMembers.js', JSON.stringify(accounts, null, 2)); // write it back

                    try {
                        data = fs.readFileSync(__dirname+'/../data/clanMembers.js', 'utf8');
                        config.clanMembers = JSON.parse(data);
                    } catch(e) {}
                    callback();
                } )
            },
            function(callback) {
                async.eachSeries(
                    config.clanMembers,
                    function (member, callback) {
                        //logger.info(userId+" "+num);

                        var userId = member.displayName;
                        var isOnLine = member.isOnLine;

                        destiny.getLight(userId, isOnLine, function (err, data) {
                            if (err) {
                                return callback(err);
                            }

                            async.eachSeries(data,
                                function (character, callback) {
                                    logger.info(character.userId+" / " + character.class + " light:" + character.light + " level:"+character.baseCharacterLevel+" minutes:"+character.minutesPlayedTotal);
                                    //logger.info(JSON.stringify(character, null, 2));

                                    destinyDb.insert(character, function (err, newDoc) {
                                        //logger.info(JSON.stringify(newDoc, null, 2));
                                        return callback(err);
                                    });

                                },
                                function (err) {
                                    callback(err);
                                }
                            );
                        });
                    },
                    callback
                )

            }
        ],
        function (err) {
            if (err) {
                logger.error(err);
            }
        }
    )



    //setTimeout(test, 1000);
};

//========================================================================

var mineGrimoire = function () {
    async.each(
        config.accountsGrimoire,
        function (user, callback) {
            destiny.getGrimoire(user, function (err, data) {

                if (err) {
                    return callback(err);
                }

                //logger.info(userId + "  " + JSON.stringify(data));

                grimoireGoogle.insert(user.docKey, data, function (err, newDoc) {
                    if (err) {
                        return callback(err);
                    }
                });
            });
        },
        function (err) {
            if (err) {
                logger.error(err);
            }
        });

}

//========================================================================
new CronJob(CRON_TAB_MINE_DESTINY, mineDestiny, null, true, "GMT");
//new CronJob(CRON_TAB_MINE_GRIMOIRE, mineGrimoire, null, true, "GMT");
//========================================================================

// launch once on start
mineDestiny();

